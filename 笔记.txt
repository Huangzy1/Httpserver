PIP的使用
作用：管理python的标准第三方库中第三方软件包
sudo apt-get install python3-pip

常用命令：
安装软件：pip3 install package
e.g.  sudo pip3 install ssh

查看当前python软件包：pip3  list

搜索某个名字的python包：pip3  search  [name]

查看软件包信息：pip3  show  [package]

升级软件包：pip3  install  --upgrade  [package]

卸载软件包：sudo  pip3  uninstall  [package]
e.g.  sudo pip3 uninstall sshr

导出软件包环境：pip3  freeze > requirements.txt

根据文档自动安装：pip3  install -r requirements.txt


PDB调试方法
import pdb 
功能：断点设置，单步执行，查看代码，查看函数，追踪变量等
命令：
b break		设置断点
c contiune	继续执行
n next		单步执行
s step		单步执行，可以进入函数内部
l list		查看代码段
pp 		查看某个变量值
help		查看其他命令
exit		退出pdb调试

进入pgb调试模式：pdb.set_tace()

直接进入Pdb调试模式：python3 -m pdb defug.py















Httpserver
前台　　前端　　客户端　　用户端
功能：提供给用户直接使用
要求：良好的用户体验　更全面的交互功能　更好的和后端进行数据交互
有良好的跨平台性　有一定的优化

后台　　后端　　服务端
功能：逻辑处理　算法实现　磁盘交互(数据库　静态文件处理)
要求：健壮性，安全性　并发性能和处理速度　架构处理便于维护扩展



网站后端
Httpserver + WebFrame

第三版
功能：
httpserver：
获取http请求　解析http请求　将请求发送给WebFrame　从WebFrame接受反馈数据
将数据组织为Response格式发送给客户端
WebFrame：
从httpserver接受具体请求　根据请求进行逻辑处理和数据处理(* 静态页面　* 逻辑数据)　将需要的数据反馈给httpserver

升级点：
1.采用httpserver和应用处理分离的模式
2.降低了耦合度
3.原则上httpserver可以搭配任意的webFrame


项目结构：
	   |--httpserver -- HttpServer.py(主程序)
	　　　|		 -- settings (httpserver配置)
project --　|
	　　　|
	   |--WebFrame -- static(存放静态网页)
		       -- views.py(应用处理程序)
		       -- urls.py(存放路由)
		       --　settings(框架配置)
	 	       --　WebFrame.py(主程序代码)	

python 自带ttpserver

from http.server import BaseHTTPRquestHandler,HTTPServer	
